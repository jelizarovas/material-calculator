{"version":3,"sources":["components/Providers/InventoryProvider.js","utils/initialMaterials.js","utils/useKeyPress.js","components/ClearInventory.js","utils/useLongPress.js","components/CountButton.js","components/Material.js","components/Materials.js","App.js","serviceWorker.js","index.js"],"names":["inventoryContext","createContext","useInventory","useContext","inventoryReducer","state","action","type","map","d","id","payload","count","newCount","initialState","name","volume","w","h","img","history","description","InventoryProvider","props","useReducer","inventory","dispatch","small","targetKey","useState","keyPressed","setKeyPressed","downHandler","useCallback","key","upHandler","useEffect","window","addEventListener","removeEventListener","useKeyPress","value","React","useMemo","Provider","ClearInventory","onClick","className","preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","CountButton","changeCount","longPressEvent","min","clsx","onChange","val","parseInt","onKeyPress","search","onKeyDown","blur","Material","m","subtext","tooltip","setTooltip","src","process","alt","xmlns","viewBox","fill","t","fillRule","clipRule","Materials","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f690fbd8.chunk.js","sourcesContent":["import React, { useEffect, useContext, createContext, useReducer } from \"react\";\r\nimport { initialMaterials } from \"../../utils/initialMaterials\";\r\nimport { useKeyPress } from \"../../utils/useKeyPress\";\r\n\r\nconst inventoryContext = createContext();\r\n\r\nconst useInventory = () => useContext(inventoryContext);\r\n\r\nconst inventoryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"changeCount\":\r\n      return state.map((d) => {\r\n        if (d.id === action.payload.id) d.count = action.payload.newCount;\r\n        return d;\r\n      });\r\n    case \"clearCount\":\r\n      return state.map((d) => {\r\n        d.count = 0;\r\n        return d;\r\n      });\r\n    case \"keyAdd\":\r\n      return state.map((d) => {\r\n        if (d.id === action.payload) d.count = d.count + 1;\r\n        return d;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = initialMaterials;\r\n\r\nconst InventoryProvider = (props) => {\r\n  const [inventory, dispatch] = useReducer(inventoryReducer, initialState);\r\n  const small = useKeyPress(\"q\");\r\n  // const medium = useKeyPress(\"w\");\r\n  // const large = useKeyPress(\"e\");\r\n  // const mattressbag = useKeyPress(\"r\");\r\n  // const wardrobeRent = useKeyPress(\"t\");\r\n  // const wardrobeBuy = useKeyPress(\"y\");\r\n  // const num1 = useKeyPress(\"1\");\r\n  // const num2 = useKeyPress(\"2\");q\r\n  // const num3 = useKeyPress(\"3\");\r\n  // const num4 = useKeyPress(\"4\");\r\n  // const num5 = useKeyPress(\"5\");\r\n\r\n  useEffect(() => {\r\n    if (small) {\r\n      dispatch({ type: \"keyAdd\", payload: \"q3lYEM\" });\r\n    }\r\n    return () => {};\r\n  }, [small]);\r\n\r\n  const value = React.useMemo(() => {\r\n    return { small, inventory, dispatch };\r\n  }, [small, inventory, dispatch]);\r\n  return <inventoryContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport { InventoryProvider, useInventory };\r\n","export const  initialMaterials = [\r\n    {\r\n      id: \"q3lYEM\",\r\n      name: \"Small Box\",\r\n      volume: 1.5,\r\n      w: \"16 3/8\",\r\n      d: \"12 5/8\",\r\n      h: \"12 5/8\",\r\n      count: 0,\r\n      img: \"img/small.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"KX1q8A\",\r\n      name: \"Medium Box\",\r\n      volume: 3.0,\r\n      w: \"18\",\r\n      d: \"18\",\r\n      h: \"16\",\r\n      count: 0,\r\n      img: \"img/medium.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"AT9F5y\",\r\n      name: \"Large Box\",\r\n      volume: 4.5,\r\n      w: \"18\",\r\n      d: \"18\",\r\n      h: \"24\",\r\n      count: 0,\r\n      img: \"img/large.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"L2NPOm\",\r\n      name: \"Mattress Bag\",\r\n      description: \"For use on mattresses & box springs\",\r\n      count: 0,\r\n      img: \"img/matbags.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"Zb53TO\",\r\n      name: \"Wardrobe (Rent)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/wardrobe.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"XjYPgM\",\r\n      name: \"Wardrobe (Buy)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/wardrobe.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"Aic8ie\",\r\n      name: \"Laydown Wardrobe\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/laydown.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"fjCPOT\",\r\n      name: \"Mirror Pack (Small)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/smirror.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"UmttCz\",\r\n      name: \"Mirror Pack (Large)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/lmirror.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"dW96Oj\",\r\n      name: \"Paper Pads\",\r\n      count: 0,\r\n      img: \"img/pads.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"K6HCr1\",\r\n      name: \"Stretch Wrap\",\r\n      count: 0,\r\n      img: \"img/wrap.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"s1s12u\",\r\n      name: \"Carpet Protection\",\r\n      count: 0,\r\n      img: \"img/carpet.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"INaIjO\",\r\n      name: \"Ropes\",\r\n      count: 0,\r\n      img: \"img/rope.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"s0mSbR\",\r\n      name: \"Blankets\",\r\n      count: 0,\r\n      img: \"img/blanket.jpg\",\r\n      history: {},\r\n    },\r\n  ];","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const useKeyPress = (targetKey) => {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  const downHandler = useCallback(\r\n    ({ key }) => {\r\n      if (key === targetKey) {\r\n        setKeyPressed(true);\r\n      }\r\n    },\r\n    [targetKey]\r\n  );\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = useCallback(\r\n    ({ key }) => {\r\n      if (key === targetKey) {\r\n        setKeyPressed(false);\r\n      }\r\n    },\r\n    [targetKey]\r\n  );\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, [downHandler, upHandler]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n};\r\n","import React from \"react\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\n\r\nconst ClearInventory = () => {\r\n  const { dispatch } = useInventory();\r\n\r\n  return (\r\n    <button\r\n      type=\"reset\"\r\n      onClick={() => dispatch({ type: \"clearCount\" })}\r\n      className=\"btn btn-default p-2 btn-icon bg-red-500 hover:bg-red-600 text-white space-x-1\"\r\n    >\r\n      <span>x </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ClearInventory;\r\n","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 300 } = {}) => {\r\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n  const timeout = useRef();\r\n  const target = useRef();\r\n\r\n  const start = useCallback(\r\n    (event) => {\r\n      if (shouldPreventDefault && event.target) {\r\n        event.target.addEventListener(\"touchend\", preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        onLongPress(event);\r\n        setLongPressTriggered(true);\r\n      }, delay);\r\n    },\r\n    [onLongPress, delay, shouldPreventDefault]\r\n  );\r\n\r\n  const clear = useCallback(\r\n    (event, shouldTriggerClick = true) => {\r\n      timeout.current && clearTimeout(timeout.current);\r\n      shouldTriggerClick && !longPressTriggered && onClick();\r\n      setLongPressTriggered(false);\r\n      if (shouldPreventDefault && target.current) {\r\n        target.current.removeEventListener(\"touchend\", preventDefault);\r\n      }\r\n    },\r\n    [shouldPreventDefault, onClick, longPressTriggered]\r\n  );\r\n\r\n  return {\r\n    onMouseDown: (e) => start(e),\r\n    onTouchStart: (e) => start(e),\r\n    onMouseUp: (e) => clear(e),\r\n    onMouseLeave: (e) => clear(e, false),\r\n    onTouchEnd: (e) => clear(e),\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event) => {\r\n  return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n  if (!isTouchEvent(event)) return;\r\n\r\n  if (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport default useLongPress;\r\n","import React from \"react\";\r\nimport useLongPress from \"../utils/useLongPress\";\r\nimport clsx from \"clsx\";\r\n\r\nconst CountButton = ({ count, changeCount }) => {\r\n  const increment = () => {\r\n    changeCount(count + 1);\r\n  };\r\n  const decrement = () => {\r\n    changeCount(count > 0 ? count - 1 : count);\r\n  };\r\n  const onChange = (e) => {\r\n    var val = parseInt(e.target.value) || 0;\r\n    return changeCount(val);\r\n  };\r\n\r\n  const onLongPress = () => {\r\n    changeCount(0);\r\n  };\r\n\r\n  const defaultOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 1000,\r\n  };\r\n\r\n  const longPressEvent = useLongPress(onLongPress, decrement, defaultOptions);\r\n\r\n  return (\r\n    <div className={`custom-number-input w-32 bg-gray-100 rounded-lg`}>\r\n      <div className=\"flex flex-row h-10 w-full rounded-lg relative bg-transparent mt-1\">\r\n        <button\r\n          {...longPressEvent}\r\n          className=\"disable-select  text-gray-600 hover:text-red-700 hover:bg-red-200 h-full w-20 rounded-l cursor-pointer outline-none\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">−</span>\r\n        </button>\r\n        <input\r\n          min=\"0\"\r\n          type=\"number\"\r\n          className={clsx(\r\n            \"outline-none bg-gray-100 focus:outline-none text-center w-full  font-semibold text-md hover:text-black focus:text-black  md:text-basecursor-default flex items-center text-gray-700  outline-none\",\r\n            count > 0 && \"bg-yellow-300\"\r\n          )}\r\n          name=\"custom-input-number\"\r\n          onChange={onChange}\r\n          onKeyPress={(e) => {\r\n            if (\r\n              e.key === \"ArrowLeft\" ||\r\n              e.key === \"ArrowRight\" ||\r\n              e.key === \"ArrowUp\" ||\r\n              e.key === \"ArrowDown\" ||\r\n              e.key === \"Delete\" ||\r\n              e.key === \"Backspace\"\r\n            ) {\r\n              return;\r\n            } else if (e.key.search(/\\d/) === -1) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n          onKeyDown={(e) => (e.key === \"Enter\" ? e.target.blur() : null)}\r\n          value={count}\r\n        ></input>\r\n        <button\r\n          onClick={increment}\r\n          className=\" text-gray-600 hover:text-green-700 hover:bg-green-200 h-full w-20 rounded-r cursor-pointer\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">+</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountButton;\r\n","import React, { useState } from \"react\";\r\nimport CountButton from \"./CountButton\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\n\r\nexport const Material = ({ m }) => {\r\n  const { id, name, volume, count, img, w, d, h, description, subtext } = m;\r\n  const { dispatch } = useInventory();\r\n\r\n  const [tooltip, setTooltip] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setTooltip((t) => !t);\r\n  };\r\n\r\n  const changeCount = (newCount) => {\r\n    dispatch({ type: \"changeCount\", payload: { id, newCount } });\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"px-6 py-4 whitespace-no-wrap \">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex-shrink-0 h-10 w-10\">\r\n            <img\r\n              className=\"h-10 w-10 \"\r\n              src={process.env.PUBLIC_URL + \"/\" + img}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"ml-4\">\r\n            <div className=\"text-sm leading-5 font-medium text-gray-900\">\r\n              {name}{\" \"}\r\n              <div className={tooltip ? \"mx-2 z-50 absolute \" : \"hidden\"}>\r\n                <div className=\"bg-black text-white text-xs rounded py-1 px-4 right-0 bottom-full   \">\r\n                  {w && d && h ? `W: ${w}\", D: ${d}\", H: ${h}\" ` : description}\r\n                </div>{\" \"}\r\n              </div>\r\n              <svg\r\n                className=\"fill-current w-4 h-4 inline text-gray-500\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n                onClick={onClick}\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"text-sm leading-5 text-gray-500\">\r\n              <span>{volume ? `${volume} c.u. ft.` : subtext} </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n\r\n      <td className=\"px-0 py-0 whitespace-no-wrap text-sm leading-5 text-gray-500\">\r\n        <CountButton count={count} changeCount={changeCount} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\nimport { Material } from \"./Material\";\r\n\r\nexport const Materials = () => {\r\n  // const [materials, setMaterials] = useState(initialMaterials);\r\n  const { inventory } = useInventory();\r\n\r\n  // console.log(inventory)\r\n  // <div style={{minHeight: 200, background: \"pink\"}}>\r\n\r\n  // {shift && 'shift '}\r\n  // {small && 'small '}\r\n  // {medium && 'medium '}\r\n  // {large && 'large '}\r\n  // {mattressbag && 'mattressbag '}\r\n  // {wardrobeRent && 'wardrobeRent '}\r\n  // {wardrobeBuy && 'wardrobeBuy '}\r\n  // {num1 && '1 '}\r\n  // {num2 && '2 '}\r\n  // {num3 && '3 '}\r\n  // {num4 && '4 '}\r\n  // {num5 && '5 '}\r\n  // </div>\r\n\r\n  // const shift = useKeyPress('shift');\r\n  // const small = useKeyPress('q');\r\n  // const medium = useKeyPress('w');\r\n  // const large = useKeyPress('e');\r\n  // const mattressbag = useKeyPress('r');\r\n  // const wardrobeRent = useKeyPress('t');\r\n  // const wardrobeBuy = useKeyPress('y');\r\n  // const num1 = useKeyPress('1');\r\n  // const num2 = useKeyPress('2');\r\n  // const num3 = useKeyPress('3');\r\n  // const num4 = useKeyPress('4');\r\n  // const num5 = useKeyPress('5');\r\n\r\n  return (\r\n    <table className=\"min-w-full divide-y divide-gray-200\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n            Material\r\n          </th>\r\n          <th className=\"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\r\n            Count\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n        {inventory.map((m) => (\r\n          <Material m={m} key={m.name + m.volume} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ClearInventory from \"./components/ClearInventory\";\r\n\r\nimport { Materials } from \"./components/Materials\";\r\n\r\nimport { InventoryProvider } from \"./components/Providers/InventoryProvider\";\r\n\r\nfunction App() {\r\n  return (\r\n    <InventoryProvider>\r\n      <div className=\"max-w-lg rounded overflow-hidden shadow-lg mx-auto mt-2\">\r\n        <div className=\"px-6 py-4 \">\r\n          <div className=\"font-bold text-orange-500 text-xl mb-0 text-center\">\r\n            Material Calculator <ClearInventory />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n              <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n                <Materials />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </InventoryProvider>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/main.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}