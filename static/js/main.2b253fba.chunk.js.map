{"version":3,"sources":["components/Providers/InventoryProvider.js","utils/initialMaterials.js","components/ClearInventory.js","utils/useLongPress.js","components/CountButton.js","components/Material.js","components/Materials.js","components/Input.js","components/Client.js","components/Rates.js","App.js","serviceWorker.js","index.js"],"names":["inventoryContext","createContext","useInventory","useContext","inventoryReducer","state","action","type","map","d","id","payload","count","newCount","initialState","name","volume","w","h","img","history","description","InventoryProvider","props","console","log","useReducer","inventory","dispatch","value","React","useMemo","Provider","ClearInventory","onClick","className","preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","CountButton","changeCount","longPressEvent","min","clsx","onChange","val","parseInt","onKeyPress","key","search","onKeyDown","blur","Material","m","subtext","src","process","alt","Materials","Input","placeholder","Icon","defaultValue","step","setValue","autoComplete","Clear","Client","EmojiPeople","Phone","Email","Home","LocalShipping","Rates","CalendarToday","date","year","getFullYear","getMonth","toString","padStart","getDate","getFormattedDate","Date","AttachMoney","AccessTime","App","to","path","Overview","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b253fba.chunk.js","sourcesContent":["import React, {\r\n  /*useEffect,*/ useContext,\r\n  createContext,\r\n  useReducer,\r\n} from \"react\";\r\nimport { initialMaterials } from \"../../utils/initialMaterials\";\r\n// import { useKeyPress } from \"../../utils/useKeyPress\";\r\n\r\nconst inventoryContext = createContext();\r\n\r\nconst useInventory = () => useContext(inventoryContext);\r\n\r\nconst inventoryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"changeCount\":\r\n      return state.map((d) => {\r\n        if (d.id === action.payload.id) d.count = action.payload.newCount;\r\n        return d;\r\n      });\r\n    case \"clearCount\":\r\n      return state.map((d) => {\r\n        d.count = 0;\r\n        return d;\r\n      });\r\n    case \"keyAdd\":\r\n      return state.map((d) => {\r\n        if (d.id === action.payload) {\r\n          d.count = d.count + 1;\r\n        }\r\n        return d;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = initialMaterials;\r\n\r\nconst InventoryProvider = (props) => {\r\n  console.log(\"inventory provider rerender\");\r\n  const [inventory, dispatch] = useReducer(inventoryReducer, initialState);\r\n  // const small = useKeyPress(\"q\");\r\n  // console.log(small);\r\n  // const medium = useKeyPress(\"w\");\r\n  // const large = useKeyPress(\"e\");\r\n  // const mattressbag = useKeyPress(\"r\");\r\n  // const wardrobeRent = useKeyPress(\"t\");\r\n  // const wardrobeBuy = useKeyPress(\"y\");\r\n  // const num1 = useKeyPress(\"1\");\r\n  // const num2 = useKeyPress(\"2\");q\r\n  // const num3 = useKeyPress(\"3\");\r\n  // const num4 = useKeyPress(\"4\");\r\n  // const num5 = useKeyPress(\"5\");\r\n\r\n  // useEffect(() => {\r\n  //   if (small) {\r\n  //     dispatch({ type: \"keyAdd\", payload: \"q3lYEM\" });\r\n  //   }\r\n  //   return () => {};\r\n  // }, [small]);\r\n\r\n  const value = React.useMemo(() => {\r\n    return { inventory, dispatch };\r\n  }, [inventory, dispatch]);\r\n  return <inventoryContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport { InventoryProvider, useInventory };\r\n","export const  initialMaterials = [\r\n    {\r\n      id: \"q3lYEM\",\r\n      name: \"Small Box\",\r\n      volume: 1.5,\r\n      w: \"16 3/8\",\r\n      d: \"12 5/8\",\r\n      h: \"12 5/8\",\r\n      count: 0,\r\n      img: \"img/small.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"KX1q8A\",\r\n      name: \"Medium Box\",\r\n      volume: 3.0,\r\n      w: \"18\",\r\n      d: \"18\",\r\n      h: \"16\",\r\n      count: 0,\r\n      img: \"img/medium.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"AT9F5y\",\r\n      name: \"Large Box\",\r\n      volume: 4.5,\r\n      w: \"18\",\r\n      d: \"18\",\r\n      h: \"24\",\r\n      count: 0,\r\n      img: \"img/large.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"L2NPOm\",\r\n      name: \"Mattress Bag\",\r\n      description: \"For use on mattresses & box springs\",\r\n      count: 0,\r\n      img: \"img/matbags.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"Zb53TO\",\r\n      name: \"Wardrobe (Rent)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/wardrobe.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"XjYPgM\",\r\n      name: \"Wardrobe (Buy)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/wardrobe.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"Aic8ie\",\r\n      name: \"Laydown Wardrobe\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/laydown.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"fjCPOT\",\r\n      name: \"Mirror Pack (Small)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/smirror.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"UmttCz\",\r\n      name: \"Mirror Pack (Large)\",\r\n      volume: 13,\r\n      w: \"24\",\r\n      d: \"24\",\r\n      h: \"40\",\r\n\r\n      count: 0,\r\n      img: \"img/lmirror.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"dW96Oj\",\r\n      name: \"Paper Pads\",\r\n      count: 0,\r\n      img: \"img/pads.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"K6HCr1\",\r\n      name: \"Stretch Wrap\",\r\n      count: 0,\r\n      img: \"img/wrap.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"s1s12u\",\r\n      name: \"Carpet Protection\",\r\n      count: 0,\r\n      img: \"img/carpet.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"INaIjO\",\r\n      name: \"Ropes\",\r\n      count: 0,\r\n      img: \"img/rope.jpg\",\r\n      history: {},\r\n    },\r\n    {\r\n      id: \"s0mSbR\",\r\n      name: \"Blankets\",\r\n      count: 0,\r\n      img: \"img/blanket.jpg\",\r\n      history: {},\r\n    },\r\n  ];","import React from \"react\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\n\r\nconst ClearInventory = () => {\r\n  const { dispatch } = useInventory();\r\n\r\n  return (\r\n    <button type=\"reset\" onClick={() => dispatch({ type: \"clearCount\" })}>\r\n      <span className=\"bg-gray-800 px-4 py-2 rounded-sm text-white text-xs hover:bg-red-700\">\r\n        Clear\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ClearInventory;\r\n","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 300 } = {}) => {\r\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n  const timeout = useRef();\r\n  const target = useRef();\r\n\r\n  const start = useCallback(\r\n    (event) => {\r\n      if (shouldPreventDefault && event.target) {\r\n        event.target.addEventListener(\"touchend\", preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        onLongPress(event);\r\n        setLongPressTriggered(true);\r\n      }, delay);\r\n    },\r\n    [onLongPress, delay, shouldPreventDefault]\r\n  );\r\n\r\n  const clear = useCallback(\r\n    (event, shouldTriggerClick = true) => {\r\n      timeout.current && clearTimeout(timeout.current);\r\n      shouldTriggerClick && !longPressTriggered && onClick();\r\n      setLongPressTriggered(false);\r\n      if (shouldPreventDefault && target.current) {\r\n        target.current.removeEventListener(\"touchend\", preventDefault);\r\n      }\r\n    },\r\n    [shouldPreventDefault, onClick, longPressTriggered]\r\n  );\r\n\r\n  return {\r\n    onMouseDown: (e) => start(e),\r\n    onTouchStart: (e) => start(e),\r\n    onMouseUp: (e) => clear(e),\r\n    onMouseLeave: (e) => clear(e, false),\r\n    onTouchEnd: (e) => clear(e),\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event) => {\r\n  return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n  if (!isTouchEvent(event)) return;\r\n\r\n  if (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport default useLongPress;\r\n","import React from \"react\";\r\nimport useLongPress from \"../utils/useLongPress\";\r\nimport clsx from \"clsx\";\r\n\r\nconst CountButton = ({ count, changeCount }) => {\r\n  const increment = () => {\r\n    changeCount(count + 1);\r\n  };\r\n  const decrement = () => {\r\n    changeCount(count > 0 ? count - 1 : count);\r\n  };\r\n  const onChange = (e) => {\r\n    var val = parseInt(e.target.value) || 0;\r\n    return changeCount(val);\r\n  };\r\n\r\n  const onLongPress = () => {\r\n    changeCount(0);\r\n  };\r\n\r\n  const defaultOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 1000,\r\n  };\r\n\r\n  const longPressEvent = useLongPress(onLongPress, decrement, defaultOptions);\r\n\r\n  return (\r\n    <div\r\n      className={`custom-number-input w-32 bg-gray-100 bg-opacity-50  rounded-lg`}\r\n    >\r\n      <div className=\"flex flex-row h-10 w-full rounded-lg relative bg-transparent \">\r\n        <button\r\n          {...longPressEvent}\r\n          className=\"disable-select  text-gray-600 hover:text-red-700 hover:bg-red-200 h-full w-20 rounded-l cursor-pointer outline-none\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">−</span>\r\n        </button>\r\n        <input\r\n          min=\"0\"\r\n          type=\"number\"\r\n          name=\"custom-input-number\"\r\n          className={clsx(\r\n            \"outline-none bg-gray-100 bg-opacity-50 focus:outline-none text-center w-full  font-semibold text-md hover:text-black focus:text-black  md:text-basecursor-default flex items-center text-gray-700\",\r\n            count > 0 && \"bg-yellow-300\"\r\n          )}\r\n          onChange={onChange}\r\n          onKeyPress={(e) => {\r\n            if (\r\n              e.key === \"ArrowLeft\" ||\r\n              e.key === \"ArrowRight\" ||\r\n              e.key === \"ArrowUp\" ||\r\n              e.key === \"ArrowDown\" ||\r\n              e.key === \"Delete\" ||\r\n              e.key === \"Backspace\"\r\n            ) {\r\n              return;\r\n            } else if (e.key.search(/\\d/) === -1) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n          onKeyDown={(e) => (e.key === \"Enter\" ? e.target.blur() : null)}\r\n          value={count}\r\n        ></input>\r\n        <button\r\n          onClick={increment}\r\n          className=\" text-gray-600 hover:text-green-700 hover:bg-green-200 h-full w-20 rounded-r cursor-pointer\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">+</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountButton;\r\n","import React, { useState } from \"react\";\r\nimport CountButton from \"./CountButton\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\n\r\nexport const Material = ({ m }) => {\r\n  const { id, name, volume, count, img, w, d, h, description, subtext } = m;\r\n  const { dispatch } = useInventory();\r\n\r\n  const [tooltip, setTooltip] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setTooltip((t) => !t);\r\n  };\r\n\r\n  const SvgInfo = () => {\r\n    return (\r\n      <svg\r\n        className=\"fill-current w-4 h-4 inline text-gray-500\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        onClick={onClick}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  const changeCount = (newCount) => {\r\n    dispatch({ type: \"changeCount\", payload: { id, newCount } });\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <div className=\"flex align-middle w-60\">\r\n          <div className=\"p-1\">\r\n            <img\r\n              className=\"max-h-4 w-4\"\r\n              src={process.env.PUBLIC_URL + \"/\" + img}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div className=\"flex-1\">\r\n              {name}{\" \"}\r\n              {/* <div className={tooltip ? \"\" : \"hidden\"}>\r\n                <div>\r\n                {w && d && h ? `W: ${w}\", D: ${d}\", H: ${h}\" ` : description}\r\n                </div>{\" \"}\r\n              </div> */}\r\n              {/*  */}\r\n            </div>\r\n            <div className=\"text-xs align-middle\">\r\n              <span>{volume ? `${volume} c.u. ft.` : subtext} </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </td>\r\n\r\n      <td>\r\n        <CountButton count={count} changeCount={changeCount} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useInventory } from \"./Providers/InventoryProvider\";\r\nimport { Material } from \"./Material\";\r\n\r\nexport const Materials = () => {\r\n  // const [materials, setMaterials] = useState(initialMaterials);\r\n  const { inventory } = useInventory();\r\n\r\n  // console.log(inventory)\r\n  // <div style={{minHeight: 200, background: \"pink\"}}>\r\n\r\n  // {shift && 'shift '}\r\n  // {small && 'small '}\r\n  // {medium && 'medium '}\r\n  // {large && 'large '}\r\n  // {mattressbag && 'mattressbag '}\r\n  // {wardrobeRent && 'wardrobeRent '}\r\n  // {wardrobeBuy && 'wardrobeBuy '}\r\n  // {num1 && '1 '}\r\n  // {num2 && '2 '}\r\n  // {num3 && '3 '}\r\n  // {num4 && '4 '}\r\n  // {num5 && '5 '}\r\n  // </div>\r\n\r\n  // const shift = useKeyPress('shift');\r\n  // const small = useKeyPress('q');\r\n  // const medium = useKeyPress('w');\r\n  // const large = useKeyPress('e');\r\n  // const mattressbag = useKeyPress('r');\r\n  // const wardrobeRent = useKeyPress('t');\r\n  // const wardrobeBuy = useKeyPress('y');\r\n  // const num1 = useKeyPress('1');\r\n  // const num2 = useKeyPress('2');\r\n  // const num3 = useKeyPress('3');\r\n  // const num4 = useKeyPress('4');\r\n  // const num5 = useKeyPress('5');\r\n\r\n  return (\r\n    <div className=\"flex p-5 justify-center  align-center \">\r\n      <table className=\"rounded-md \">\r\n        <thead className=\"\">\r\n          <tr className=\"bg-green-700 text-white\">\r\n            <th>Material</th>\r\n            <th>Count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"bg-white\">\r\n          {inventory.map((m) => (\r\n            <Material m={m} key={m.name + m.volume} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n// import { Icon } from \"@material-ui/core\";\r\nimport { EmojiPeople, Clear, Email, Phone } from \"@material-ui/icons/\";\r\n\r\nexport const Input = ({\r\n  name,\r\n  placeholder,\r\n  Icon,\r\n  type = \"text\",\r\n  defaultValue,\r\n  step,\r\n}) => {\r\n  const [value, setValue] = useState(defaultValue || \"\");\r\n\r\n  return (\r\n    <div className=\"relative text-gray-600 focus-within:text-red-400 w-100 m-2\">\r\n      <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\r\n        <Icon />\r\n      </span>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className=\" w-full  py-2 pr-6 text-sm text-black bg-white rounded-md pl-12 focus:outline-none focus:bg-white focus:text-gray-900\"\r\n        placeholder={placeholder}\r\n        autoComplete=\"off\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        step={step}\r\n      />\r\n      {value.length > 0 ? (\r\n        <span\r\n          className=\"absolute inset-y-0 right-0 flex items-center px-2 cursor-pointer opacity-20 focus:opacity-100 hover:opacity-100\"\r\n          onClick={() => setValue(\"\")}\r\n        >\r\n          <Clear />{\" \"}\r\n        </span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import { Input } from \"./Input\";\r\nimport {\r\n  EmojiPeople,\r\n  Email,\r\n  Phone,\r\n  Home,\r\n  LocalShipping,\r\n  CalendarToday,\r\n  AccessTime,\r\n  Clear,\r\n} from \"@material-ui/icons/\";\r\n\r\nexport const Client = () => {\r\n  return (\r\n    <div className=\"md:container md:mx-auto\">\r\n      <div className=\"px-10 w-full sm:w-1/2 mx-auto lg:w-1/3 flex-row \">\r\n        <h2>Personal Info</h2>\r\n        <Input Icon={EmojiPeople} placeholder=\"Full Name\" />\r\n        <Input Icon={Phone} placeholder=\"Phone Number\" type=\"number\" />\r\n        <Input Icon={Email} placeholder=\"Email\" type=\"email\" />\r\n        <h2>Locations</h2>\r\n        <Input Icon={Home} placeholder=\"Starting Point (Origin)\" />\r\n        <Input Icon={LocalShipping} placeholder=\"End Point (Destination)\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { Input } from \"./Input\";\r\nimport {\r\n  AttachMoney,\r\n  Email,\r\n  Phone,\r\n  Home,\r\n  LocalShipping,\r\n  CalendarToday,\r\n  AccessTime,\r\n  Clear,\r\n} from \"@material-ui/icons/\";\r\n\r\nfunction getFormattedDate(date) {\r\n  let year = date.getFullYear();\r\n  let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\r\n  let day = date.getDate().toString().padStart(2, \"0\");\r\n\r\n  return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\nconst reducer = ({ action, type }) => {};\r\n\r\nexport const Rates = () => {\r\n  // const [state, dispatch] = useReducer(reducer, initialState, init);\r\n  return (\r\n    <div className=\"md:container md:mx-auto\">\r\n      <div className=\"px-10 w-full sm:w-1/2 mx-auto lg:w-1/3 flex-row \">\r\n        <h2>Job Type</h2>\r\n\r\n        <select className=\"m-2 w-full  py-2 pr-6 text-sm text-black bg-white rounded-md pl-2 focus:outline-none focus:bg-white focus:text-gray-900\">\r\n          <option>⏰ Local (Hourly)</option>\r\n          <option>🚚 Long Distance</option>\r\n          <option>💳 Flat Rate</option>\r\n        </select>\r\n\r\n        <h2>Date</h2>\r\n        <Input\r\n          Icon={CalendarToday}\r\n          placeholder=\"Date\"\r\n          type=\"text\"\r\n          defaultValue={() => {\r\n            return getFormattedDate(new Date());\r\n          }}\r\n        />\r\n\r\n        <h2>Rates</h2>\r\n\r\n        <Input placeholder=\"Hourly\" type=\"number\" Icon={AttachMoney} step=\"5\" />\r\n        <Input placeholder=\"Travel Fee\" type=\"number\" Icon={LocalShipping} />\r\n\r\n        <h2>Totals</h2>\r\n        <Input\r\n          placeholder=\"Total Hours\"\r\n          type=\"number\"\r\n          Icon={AccessTime}\r\n          min=\"2\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ClearInventory from \"./components/ClearInventory\";\r\n\r\nimport { Materials } from \"./components/Materials\";\r\nimport { Client } from \"./components/Client\";\r\n\r\nimport { InventoryProvider } from \"./components/Providers/InventoryProvider\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Rates } from \"./components/Rates\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"w-screen h-screen bg-gray-200\">\r\n      <InventoryProvider>\r\n        <Router>\r\n          <div className=\"flex-row justify-center w-screen bg-gray-800 \">\r\n            <div className=\"text-white p-4 bg-black flex  justify-around\">\r\n              <div className=\"flex cursor-pointer\">\r\n                <img\r\n                  className=\"bg-white w-6 h-6 p-1\"\r\n                  src={process.env.PUBLIC_URL + \"/\" + \"favicon.ico\"}\r\n                  alt=\"\"\r\n                />\r\n                <span className=\"px-2\">\r\n                  What'sThe<strong>Damage</strong>\r\n                </span>\r\n              </div>\r\n              <nav className=\"px-5 \">\r\n                <ul className=\"flex justify-around\">\r\n                  <li className=\"px-2\">\r\n                    <Link to=\"/client\">Client</Link>\r\n                  </li>\r\n                  <li className=\"px-2\">\r\n                    <Link to=\"/rates\">Rates</Link>\r\n                  </li>\r\n                  <li className=\"px-2\">\r\n                    <Link to=\"/rates\">Inventory</Link>\r\n                  </li>\r\n                  <li className=\"px-2\">\r\n                    <Link to=\"/materials\">Materials</Link>\r\n                  </li>\r\n                  {/* <li className=\"px-2\">\r\n                    <Link to=\"/overview\">Overview</Link>\r\n                  </li> */}\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path=\"/materials\">\r\n              <ClearInventory />\r\n              <Materials />\r\n            </Route>\r\n            <Route path=\"/rates\">\r\n              <Rates />\r\n            </Route>\r\n            <Route path=\"/client\">\r\n              <Client />\r\n            </Route>\r\n            <Route path=\"/overview\">\r\n              <Overview />\r\n            </Route>\r\n          </Switch>\r\n          {/* </div> */}\r\n        </Router>\r\n      </InventoryProvider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\nfunction Overview() {\r\n  return <h2>Overview</h2>;\r\n}\r\n\r\nfunction Users() {\r\n  return <h2>Users</h2>;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./assets/main.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}