{"version":3,"sources":["utils/useLongPress.js","components/CountButton.js","App.js","serviceWorker.js","index.js"],"names":["preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","CountButton","count","setCount","longPressEvent","c","className","min","type","clsx","name","onChange","val","parseInt","value","onKeyPress","key","search","onKeyDown","blur","App","volume","w","d","h","img","history","description","materials","Material","m","subtext","tooltip","setTooltip","src","alt","xmlns","viewBox","fill","t","fillRule","clipRule","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e1efc7ff.chunk.js","sourcesContent":["import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 300 } = {}) => {\r\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n  const timeout = useRef();\r\n  const target = useRef();\r\n\r\n  const start = useCallback(\r\n    (event) => {\r\n      if (shouldPreventDefault && event.target) {\r\n        event.target.addEventListener(\"touchend\", preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        onLongPress(event);\r\n        setLongPressTriggered(true);\r\n      }, delay);\r\n    },\r\n    [onLongPress, delay, shouldPreventDefault]\r\n  );\r\n\r\n  const clear = useCallback(\r\n    (event, shouldTriggerClick = true) => {\r\n      timeout.current && clearTimeout(timeout.current);\r\n      shouldTriggerClick && !longPressTriggered && onClick();\r\n      setLongPressTriggered(false);\r\n      if (shouldPreventDefault && target.current) {\r\n        target.current.removeEventListener(\"touchend\", preventDefault);\r\n      }\r\n    },\r\n    [shouldPreventDefault, onClick, longPressTriggered]\r\n  );\r\n\r\n  return {\r\n    onMouseDown: (e) => start(e),\r\n    onTouchStart: (e) => start(e),\r\n    onMouseUp: (e) => clear(e),\r\n    onMouseLeave: (e) => clear(e, false),\r\n    onTouchEnd: (e) => clear(e),\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event) => {\r\n  return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n  if (!isTouchEvent(event)) return;\r\n\r\n  if (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport default useLongPress;\r\n","import React, { useState } from \"react\";\r\nimport useLongPress from \"../utils/useLongPress\";\r\nimport clsx from \"clsx\";\r\n\r\nconst CountButton = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const increment = () => {\r\n    setCount((c) => c + 1);\r\n  };\r\n  const decrement = () => {\r\n    setCount((c) => (c > 0 ? c - 1 : c));\r\n  };\r\n  const onChange = (e) => {\r\n    var val = parseInt(e.target.value) || 0;\r\n    return setCount(val);\r\n  };\r\n\r\n  const onLongPress = () => {\r\n    setCount(0);\r\n  };\r\n\r\n  const defaultOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 1000,\r\n  };\r\n\r\n  const longPressEvent = useLongPress(onLongPress, decrement, defaultOptions);\r\n\r\n  return (\r\n    <div className={`custom-number-input w-32 bg-gray-100 rounded-lg`}>\r\n      <div className=\"flex flex-row h-10 w-full rounded-lg relative bg-transparent mt-1\">\r\n        <button\r\n          {...longPressEvent}\r\n          className=\"disable-select  text-gray-600 hover:text-red-700 hover:bg-red-200 h-full w-20 rounded-l cursor-pointer outline-none\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">âˆ’</span>\r\n        </button>\r\n        <input\r\n          min=\"0\"\r\n          type=\"number\"\r\n          className={clsx(\r\n            \"outline-none bg-gray-100 focus:outline-none text-center w-full  font-semibold text-md hover:text-black focus:text-black  md:text-basecursor-default flex items-center text-gray-700  outline-none\",\r\n            count > 0 && \"bg-yellow-300\"\r\n          )}\r\n          name=\"custom-input-number\"\r\n          onChange={onChange}\r\n          onKeyPress={(e) => {\r\n            if (\r\n              e.key === \"ArrowLeft\" ||\r\n              e.key === \"ArrowRight\" ||\r\n              e.key === \"ArrowUp\" ||\r\n              e.key === \"ArrowDown\" ||\r\n              e.key === \"Delete\" ||\r\n              e.key === \"Backspace\"\r\n            ) {\r\n              return;\r\n            } else if (e.key.search(/\\d/) === -1) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n          onKeyDown={(e) => (e.key === \"Enter\" ? e.target.blur() : null)}\r\n          value={count}\r\n        ></input>\r\n        <button\r\n          onClick={increment}\r\n          className=\" text-gray-600 hover:text-green-700 hover:bg-green-200 h-full w-20 rounded-r cursor-pointer\"\r\n        >\r\n          <span className=\"m-auto text-2xl font-thin\">+</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountButton;\r\n","import React, { useState } from \"react\";\nimport CountButton from \"./components/CountButton\";\n\nfunction App() {\n  const initialMaterials = [\n    {\n      name: \"Small Box\",\n      volume: 1.5,\n      w: \"16 3/8\",\n      d: \"12 5/8\",\n      h: \"12 5/8\",\n      count: 0,\n      img: \"img/small.jpg\",\n      history: {},\n    },\n    {\n      name: \"Medium Box\",\n      volume: 3.0,\n      w: \"18\",\n      d: \"18\",\n      h: \"16\",\n      count: 0,\n      img: \"img/medium.jpg\",\n      history: {},\n    },\n    {\n      name: \"Large Box\",\n      volume: 4.5,\n      w: \"18\",\n      d: \"18\",\n      h: \"24\",\n      count: 0,\n      img: \"img/large.jpg\",\n      history: {},\n    },\n    {\n      name: \"Mattress Bag\",\n      description: \"For use on mattresses & box springs\",\n      count: 0,\n      img: \"img/matbags.jpg\",\n      history: {},\n    },\n    {\n      name: \"Wardrobe (Rent)\",\n      volume: 13,\n      w: \"24\",\n      d: \"24\",\n      h: \"40\",\n\n      count: 0,\n      img: \"img/wardrobe.jpg\",\n      history: {},\n    },\n    {\n      name: \"Wardrobe (Buy)\",\n      volume: 13,\n      w: \"24\",\n      d: \"24\",\n      h: \"40\",\n\n      count: 0,\n      img: \"img/wardrobe.jpg\",\n      history: {},\n    },\n    {\n      name: \"Laydown Wardrobe\",\n      volume: 13,\n      w: \"24\",\n      d: \"24\",\n      h: \"40\",\n\n      count: 0,\n      img: \"img/laydown.jpg\",\n      history: {},\n    },\n    {\n      name: \"Mirror Pack (Small)\",\n      volume: 13,\n      w: \"24\",\n      d: \"24\",\n      h: \"40\",\n\n      count: 0,\n      img: \"img/smirror.jpg\",\n      history: {},\n    },\n    {\n      name: \"Mirror Pack (Large)\",\n      volume: 13,\n      w: \"24\",\n      d: \"24\",\n      h: \"40\",\n\n      count: 0,\n      img: \"img/lmirror.jpg\",\n      history: {},\n    },\n    {\n      name: \"Paper Pads\",\n      count: 0,\n      img: \"img/pads.jpg\",\n      history: {},\n    },\n    {\n      name: \"Stretch Wrap\",\n      count: 0,\n      img: \"img/wrap.jpg\",\n      history: {},\n    },\n    {\n      name: \"Carpet Protection\",\n      count: 0,\n      img: \"img/carpet.jpg\",\n      history: {},\n    },\n    {\n      name: \"Ropes\",\n      count: 0,\n      img: \"img/rope.jpg\",\n      history: {},\n    },\n    {\n      name: \"Blankets\",\n      count: 0,\n      img: \"img/blanket.jpg\",\n      history: {},\n    },\n  ];\n\n  const [materials, setMaterials] = useState(initialMaterials);\n\n  const Material = ({ m }) => {\n    const { name, volume, count, img, w, d, h, description, subtext } = m;\n\n    const [tooltip, setTooltip] = useState(false);\n\n    const onClick = () => {\n      setTooltip((t) => !t);\n    };\n    return (\n      <tr>\n        <td className=\"px-6 py-4 whitespace-no-wrap \">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-10 w-10\">\n              <img className=\"h-10 w-10 \" src={img} alt=\"\" />\n            </div>\n            <div className=\"ml-4\">\n              <div className=\"text-sm leading-5 font-medium text-gray-900\">\n                {name}{\" \"}\n                <div className={tooltip ? \"mx-2 z-50 absolute \" : \"hidden\"}>\n                  <div className=\"bg-black text-white text-xs rounded py-1 px-4 right-0 bottom-full   \">\n                    {w && d && h ? `W: ${w}\", D: ${d}\", H: ${h}\" ` : description}\n                  </div>{\" \"}\n                </div>\n                <svg\n                  className=\"fill-current w-4 h-4 inline text-gray-500\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  onClick={onClick}\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"text-sm leading-5 text-gray-500\">\n                <span>{volume ? `${volume} c.u. ft.` : subtext} </span>\n              </div>\n            </div>\n          </div>\n        </td>\n\n        <td className=\"px-0 py-0 whitespace-no-wrap text-sm leading-5 text-gray-500\">\n          <CountButton count={count} />\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"max-w-lg rounded overflow-hidden shadow-lg mx-auto mt-2\">\n      <div className=\"px-6 py-4 \">\n        <div className=\"font-bold text-orange-500 text-xl mb-0 text-center\">Material Calculator</div>\n      </div>\n\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      Material\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                      Count\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {materials.map((m) => (\n                    <Material m={m} key={m.name + m.volume} />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}